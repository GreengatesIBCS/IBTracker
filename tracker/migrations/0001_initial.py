# Generated by Django 2.0.2 on 2018-02-15 03:21

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Login',
            fields=[
                ('id', models.IntegerField(help_text='Unique ID for each student', primary_key=True, serialize=False, validators=[django.core.validators.MaxValueValidator(10000), django.core.validators.MinValueValidator(1000)])),
                ('Login_name', models.CharField(help_text='student name', max_length=60)),
                ('last_name', models.CharField(help_text='last name', max_length=60)),
                ('email', models.CharField(help_text='email', max_length=60)),
                ('password', models.CharField(help_text='password', max_length=60)),
                ('Login_code', models.CharField(help_text='Code for the Login', max_length=20)),
            ],
            options={
                'ordering': ['Login_code'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('student_id', models.IntegerField(help_text='Enter your student ID', primary_key=True, serialize=False, validators=[django.core.validators.MaxValueValidator(10000), django.core.validators.MinValueValidator(1000)])),
                ('first_name', models.CharField(help_text='write your name', max_length=60)),
                ('last_name', models.CharField(help_text='Write your last name', max_length=60)),
                ('password', models.CharField(help_text='Write a password here. This will be used to access ur account', max_length=60)),
                ('level1', models.CharField(choices=[('C', 'Core'), ('H', 'High Level'), ('S', 'Standard Level')], help_text='Chose the level', max_length=1)),
                ('level2', models.CharField(choices=[('C', 'Core'), ('H', 'High Level'), ('S', 'Standard Level')], help_text='Chose the level', max_length=1)),
                ('level3', models.CharField(choices=[('C', 'Core'), ('H', 'High Level'), ('S', 'Standard Level')], help_text='Chose the level', max_length=1)),
            ],
            options={
                'ordering': ['last_name', 'first_name'],
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.IntegerField(help_text='Unique ID for this paticular subject in the app', primary_key=True, serialize=False)),
                ('subject_name', models.CharField(help_text='Name of the subject to track', max_length=20)),
                ('subject_group', models.CharField(help_text='Group for the subject', max_length=20)),
            ],
            options={
                'ordering': ['subject_name'],
            },
        ),
        migrations.CreateModel(
            name='Subtopic',
            fields=[
                ('id', models.IntegerField(help_text='Unique ID for this particlar subtopic in the app', primary_key=True, serialize=False)),
                ('subtopic_name', models.CharField(help_text='Name of the subtopic to track', max_length=60)),
                ('code', models.CharField(help_text='Code for subtopic', max_length=20)),
                ('hours', models.IntegerField(validators=[django.core.validators.MaxValueValidator(240), django.core.validators.MinValueValidator(1)])),
            ],
            options={
                'ordering': ['subtopic_name'],
            },
        ),
        migrations.CreateModel(
            name='Support',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instructions', models.CharField(help_text='last name', max_length=60)),
                ('questions', models.TextField(max_length=200)),
            ],
            options={
                'ordering': ['instructions'],
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.IntegerField(help_text='Unique ID for this particular topic', primary_key=True, serialize=False)),
                ('topic_name', models.CharField(help_text='Name of the topic to track', max_length=60)),
                ('topic_code', models.CharField(help_text='Code for the topic', max_length=20)),
                ('hours', models.IntegerField(validators=[django.core.validators.MaxValueValidator(240), django.core.validators.MinValueValidator(1)])),
                ('scope', models.CharField(choices=[('C', 'core'), ('H', 'High Level'), ('S', 'Standard Level')], help_text='Scope of the topic', max_length=1)),
                ('subject', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tracker.Subject')),
            ],
            options={
                'ordering': ['topic_name'],
            },
        ),
        migrations.AddField(
            model_name='subtopic',
            name='topic',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tracker.Topic'),
        ),
        migrations.AddField(
            model_name='student',
            name='subject1',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subject1', to='tracker.Subject'),
        ),
        migrations.AddField(
            model_name='student',
            name='subject2',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subject2', to='tracker.Subject'),
        ),
        migrations.AddField(
            model_name='student',
            name='subject3',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subject3', to='tracker.Subject'),
        ),
        migrations.AddField(
            model_name='login',
            name='subject',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='tracker.Subject'),
        ),
    ]
